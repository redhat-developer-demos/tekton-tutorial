apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: greeter-app-deploy
spec:
  description: >-
    The Pipline to buld and deploy the Hello World Java App https://github.com/redhat-scholars/tekton-tutorial-greeter as Knative Service.
  params:
    - name: image-name #<.>
      description: The fully qualified image name e.g registry.local:5000/tekton-tutorial/greeter
      default: registry.local:5000/tekton-tutorial/greeter
    - name: context-dir
      description: >-
        The application framework to use, value can be either quarkus or springboot
    - name: kn-service-name
      description: The Knative Service name
      default: greeter
    - name: github-repo-url
      description: The GitHub Repo of the Java Application
      default: https://github.com/redhat-scholars/tekton-tutorial-greeter
    - name: github-repo-revision
      description: The GitHub revision to use
      default: staging
  workspaces:
    - name: source #<.>
    - name: maven-settings #<.>
  tasks:
    - name: clone-sources
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.github-repo-url)
        - name: revision
          value: $(params.github-repo-revision)
        # just to do a fresh clone, as we already have the directory cloned
        # to reuse it we can exlude this step
        - name: deleteExisting
          value: 'true'
      workspaces:
        - name: output
          workspace: source
    - name: build-java-test
      taskRef:
        name: maven
      runAfter:
        - clone-sources
      params:
        - name: GOALS
          value: ['-pl', '$(params.context-dir)', '-B', 'clean', 'test']
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: source
    - name: build-java-app
      taskRef:
        name: maven
      runAfter:
        - build-java-test
      params:
        - name: GOALS
          value:
            [
              '-pl',
              '$(params.context-dir)',
              '-B',
              '-DskipTests',
              'clean',
              'package',
            ]
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: source
    - name: build-java-app-image
      taskRef:
        name: buildah
      runAfter:
        - build-java-app
      params:
        - name: CONTEXT
          value: '$(params.context-dir)'
        - name: IMAGE
          value: '$(params.image-name)'
        # since pushing to internal registry we skip TLS verify
        - name: TLSVERIFY
          value: 'false'
      workspaces:
        - name: source
          workspace: source
    - name: deploy-kn-service
      taskRef:
        name: kn
      runAfter:
        - build-java-app-image
      params:
        - name: ARGS
          value:
            - 'service'
            - 'create'
            - '$(params.kn-service-name)'
            - '--force'
            - '--image=$(params.image-name)@$(tasks.build-java-app-image.results.IMAGE_DIGEST)' #<.>
